#+title: Org-mode & Org-roam

* Org-mode

  Use it a Wiki syntax to take notes and format simple documents

** Running Code Fragments
   Configure how to run various code fragments

   #+begin_src emacs-lisp
     (org-babel-do-load-languages
      'org-babel-load-languages
      '((python . t)
        (C . t)
        (dot . t)
        (R . t)
        (ruby . t)
        (shell . t)
        (screen . t)
        (scheme . t)
        (js . t)
        (java . t)
        (ditaa . t)))
   #+end_src

*** Ditaa

    Extra configuration to configure Ditaa (ASCII diagrams)
  
    #+begin_src emacs-lisp
      (setq org-ditaa-jar-path "/opt/homebrew/Cellar/ditaa/0.11.0_1/libexec/ditaa.jar")
    #+end_src
   
** BibTeX References
  Use package ~org-ref~ to get my references available from BibTeX
   
  #+begin_src emacs-lisp
    (use-package org-ref
      :config
      (setq reftex-default-bibliography "~/notes/references.bib"
            org-ref-bibliography-notes "~/notes/references.org"
            org-ref-default-bibliography '("~/notes/references.bib")
            org-ref-pdf-directory "~/notes/pdf/"))
  #+end_src

** Export to PDF / LaTeX

   We use the LaTeX package ~minted~ to colorize code fragments
   
  #+begin_src emacs-lisp
    (setq org-latex-listings 'minted
          org-latex-packages-alist '(("" "minted"))
          org-latex-pdf-process
          '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
            "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
            "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
  #+end_src
  
* Org-roam

  I use it to take notes about various things:

  #+begin_src emacs-lisp
      (use-package org-roam
        :init
        (setq org-roam-v2-ack t)
        :hook
        (after-init . org-roam-mode)
        :custom
        (org-roam-directory "~/notes")
        (org-roam-db-location "~/notes/org-roam.db")
        (org-roam-index-file "~/notes/index.org")
        (org-roam-db-update-method 'immediate)
        :bind (("C-c n l" . org-roam)
               ("C-c n f" . org-roam-node-find)
               ("C-c n g" . org-roam-graph)
               ("C-c n i" . org-roam-insert)
               ("C-c n I" . org-roam-insert-immediate))
        :config
        (org-roam-setup))
  #+end_src

  #+RESULTS:
  : org-roam-insert-immediate



