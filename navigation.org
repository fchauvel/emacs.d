#+title: Navigation


* Helm: Incremental Completion and Narrowing

  #+begin_src emacs-lisp
    (use-package helm
      :config
      (helm-mode 1)
      (global-set-key (kbd "M-x") #'helm-M-x)
      (global-set-key (kbd "C-x r b") #'helm-filtered-bookmarks)
      (global-set-key (kbd "C-x C-f") #'helm-find-files)
      (global-set-key (kbd "C-x b") #'helm-buffers-list))
  #+end_src

  #+RESULTS:
  : helm-buffers-list

  When using ~helm-find-files~ One can use ~C-c C-u~ to refresh the
  file list. Newly created files may be missing.

  #+RESULTS:
  : helm-find-files
  
* Bookmarks

Use [[https://github.com/joodland/bm][Visual Bookmarks]]

#+begin_src elisp
  (use-package bm
    :ensure t
    :demand t

    :init
    ;; restore on load (even before you require bm)
    (setq bm-restore-repository-on-load t)

    :config
    ;; Allow cross-buffer 'next'
    (setq bm-cycle-all-buffers nil)

    ;; where to store persistant files
    (setq bm-repository-file "~/.emacs.d/bm-repository")

    ;; save bookmarks
    (setq-default bm-buffer-persistence t)

    ;; Loading the repository from file when on start up.
    (add-hook 'after-init-hook 'bm-repository-load)

    ;; Saving bookmarks
    (add-hook 'kill-buffer-hook #'bm-buffer-save)

    ;; Saving the repository to file when on exit.
    ;; kill-buffer-hook is not called when Emacs is killed, so we
    ;; must save all bookmarks first.
    (add-hook 'kill-emacs-hook #'(lambda nil
                                   (bm-buffer-save-all)
                                   (bm-repository-save)))

    ;; The `after-save-hook' is not necessary to use to achieve persistence,
    ;; but it makes the bookmark data in repository more in sync with the file
    ;; state.
    (add-hook 'after-save-hook #'bm-buffer-save)

    ;; Restoring bookmarks
    (add-hook 'find-file-hooks   #'bm-buffer-restore)
    (add-hook 'after-revert-hook #'bm-buffer-restore)

    ;; The `after-revert-hook' is not necessary to use to achieve persistence,
    ;; but it makes the bookmark data in repository more in sync with the file
    ;; state. This hook might cause trouble when using packages
    ;; that automatically reverts the buffer (like vc after a check-in).
    ;; This can easily be avoided if the package provides a hook that is
    ;; called before the buffer is reverted (like `vc-before-checkin-hook').
    ;; Then new bookmarks can be saved before the buffer is reverted.
    ;; Make sure bookmarks is saved before check-in (and revert-buffer)
    (add-hook 'vc-before-checkin-hook #'bm-buffer-save)

    :bind (("<f2>" . bm-next)
           ("S-<f2>" . bm-previous)
           ("C-<f2>" . bm-toggle))
    )
#+end_src

#+RESULTS:
: bm-toggle

  
* Windows Management

  Jump from one window to another using the /ace-window/ package.

  #+begin_src emacs-lisp
    (use-package ace-window
      :bind ("M-o" . ace-window)
      :config
      (setq (ace-window-display-mode 1)
            (aw-dispatch-always t)))
  #+end_src

  #+RESULTS:
  : ace-window

  Highlight where the cursor goes

  #+begin_src emacs-lisp
    (use-package beacon
      :config
      (beacon-mode t))
  #+end_src
  

* Help & Shortcuts

  Use which-key to show the shortcuts available, using ~C-x~and wait a
  second.

  #+begin_src emacs-lisp
    (use-package which-key
      :init
      (which-key-mode))
  #+end_src  
  
  We use the /helm-swoop/ package to search through files, possibly
  through multiple files.
  #+begin_src emacs-lisp
    (use-package helm-swoop
      :bind (
             ("M-i" . helm-swoop)
             ("C-c M-i" . helm-multi-swoop)
         )
      :init
      (setq helm-swoop-use-fuzzy-match t))
  #+end_src

  
* Disk/File Search

** Directory Navigation with Direx

See [[https://github.com/emacsorphanage/direx/tree/935d2010234c02c93e22d6e1cc72d595341ba855][Direx Github]]

#+begin_src elisp
    (use-package direx
      :bind (
             ("C-x C-j" . #'direx:jump-to-directory-other-window)))
#+end_src

#+RESULTS:
: direx:jump-to-directory-other-window

** Grep

One can use regular grep command, available through ~M-x grep~


** AG & Helm-AG

  We use [[https://github.com/ggreer/the_silver_searcher][AG --- The Silver Searcher]], to carry out search. Note that it
  is a CLI tools that has to be installed separately.

  #+begin_src elisp
    (use-package helm-ag
      :bind (("C-c s" . helm-do-ag))
      )
  #+end_src

  #+RESULTS:
  : helm-do-ag

  Use ~M-x helm-ag~ to search in the current folder, or ~C-u <folder>
  M-x helm-ag~ to search somewhere else

  


